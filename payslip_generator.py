from fpdf import FPDF
import pandas as pd
import os
from datetime import datetime
import smtplib
from email.message import EmailMessage

# Replace with your Gmail and app password
EMAIL_SENDER = "email@gmail.com"
EMAIL_PASSWORD = "password"  # Use App Password (not Gmail login password)

class PayslipPDF(FPDF):
    def header(self):
        self.set_font("Arial", 'B', 16)
        self.set_text_color(40, 40, 100)
        self.cell(0, 10, "TechFusion Inc.", ln=True, align='C')
        self.set_font("Arial", '', 12)
        self.set_text_color(0, 0, 0)
        self.cell(0, 10, "Monthly Payslip", ln=True, align='C')
        self.ln(10)

    def footer(self):
        self.set_y(-15)
        self.set_font('Arial', 'I', 8)
        self.set_text_color(128)
        self.cell(0, 10, 'This is a payslip generated by Emmerson.', 0, 0, 'C')

    def employee_section(self, row):
        self.set_font("Arial", 'B', 12)
        self.cell(0, 10, "Employee Information", ln=True)
        self.set_font("Arial", '', 11)
        self.cell(0, 8, f"Employee ID: {row['Employee ID']}", ln=True)
        self.cell(0, 8, f"Name: {row['Name']}", ln=True)
        self.cell(0, 8, f"Date: {datetime.now().strftime('%d %b %Y')}", ln=True)
        self.ln(5)

    def salary_section(self, row):
        basic = row['Basic Salary']
        allow = row['Allowances']
        deduct = row['Deductions']
        net = basic + allow - deduct

        self.set_font("Arial", 'B', 12)
        self.cell(0, 10, "Salary Details", ln=True)
        self.set_font("Arial", '', 11)

        self.set_fill_color(230, 230, 250)
        self.cell(80, 8, "Description", 1, 0, 'C', 1)
        self.cell(50, 8, "Amount (USD)", 1, 1, 'C', 1)

        self.cell(80, 8, "Basic Salary", 1)
        self.cell(50, 8, f"${basic:.2f}", 1, 1, 'R')

        self.cell(80, 8, "Allowances", 1)
        self.cell(50, 8, f"${allow:.2f}", 1, 1, 'R')

        self.cell(80, 8, "Deductions", 1)
        self.cell(50, 8, f"${deduct:.2f}", 1, 1, 'R')

        self.set_font("Arial", 'B', 11)
        self.cell(80, 8, "Net Salary", 1)
        self.cell(50, 8, f"${net:.2f}", 1, 1, 'R')

        self.ln(10)

    def sign_section(self):
        self.set_font("Arial", '', 10)
        self.cell(0, 10, "Authorized By: ______________________", ln=True)
        self.cell(0, 5, "Signature & Company Seal", ln=True)

# Email function
def send_email(recipient, file_path, employee_name):
    msg = EmailMessage()
    msg["Subject"] = f"Payslip for {employee_name}"
    msg["From"] = EMAIL_SENDER
    msg["To"] = recipient
    msg.set_content(f"Dear {employee_name},\n\nPlease find attached your monthly payslip.\n\nRegards,\nTechFusion Inc.")

    with open(file_path, "rb") as f:
        file_data = f.read()
        file_name = os.path.basename(file_path)
        msg.add_attachment(file_data, maintype="application", subtype="pdf", filename=file_name)

    try:
        with smtplib.SMTP_SSL("smtp.gmail.com", 465) as smtp:
            smtp.login(EMAIL_SENDER, EMAIL_PASSWORD)
            smtp.send_message(msg)
            print(f"üìß Email sent to {recipient}")
    except Exception as e:
        print(f"‚ùå Failed to email {recipient}: {e}")

# ----------------- Main Logic -----------------
def generate_payslip(row):
    pdf = PayslipPDF()
    pdf.add_page()
    pdf.employee_section(row)
    pdf.salary_section(row)
    pdf.sign_section()

    os.makedirs("payslips", exist_ok=True)
    safe_name = str(row['Name']).replace(' ', '_')
    filename = f"payslips/{row['Employee ID']}_{safe_name}.pdf"
    pdf.output(filename)
    print(f"‚úÖ Payslip saved: {filename}")

    if 'Email' in row and pd.notna(row['Email']):
        send_email(row['Email'], filename, row['Name'])
    else:
        print("‚ö†Ô∏è No email provided for", row['Name'])

def main():
    file_path = "Employees.xlsx"
    try:
        df = pd.read_excel(file_path)
        df.columns = df.columns.str.strip()
        for _, row in df.iterrows():
            generate_payslip(row)
    except Exception as e:
        print(f"‚ùå Error: {e}")

if __name__ == "__main__":
    main()
